generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./db/dev.db"
}

model User {
  id               String         @id @default(cuid())
  firstName        String?
  lastName         String?
  username         String         @unique
  password         String         @default("password-excluded")
  email            String         @unique
  contactNumber    String
  role             String         @default("client")
  rating           Float          @default(0)
  ratingCount      Int            @default(0)
  portfolioId      String?        @unique
  receivedMessages Message[]      @relation("Receiver")
  sentMessages     Message[]      @relation("Sender")
  client           Project[]      @relation("Client")
  worker           Project[]      @relation("Worker")
  notifications    Notification[]
  portfolio        Portfolio?     @relation("userPortfolio", fields: [portfolioId], references: [id])
}

model Project {
  id            String  @id @default(cuid())
  name          String
  description   String
  typeOfService String?
  status        String  @default("pending")
  client        User    @relation("Client", fields: [clientId], references: [id])
  worker        User    @relation("Worker", fields: [workerId], references: [id])
  clientId      String
  workerId      String
 
}

model Notification {
  id         String   @id @default(cuid())
  title      String
  content    String
  created_at DateTime @default(now())
  isRead     Boolean  @default(false)
  userId     String
  user       User     @relation(fields: [userId], references: [id])
}

model Portfolio {
  id       String             @id @default(cuid())
  userId   String?
  projects CompletedProject[]
  user     User?              @relation("userPortfolio")
}

model CompletedProject {
  id          Int       @id @default(autoincrement())
  name        String
  portfolioId String
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id])
  images      Image[]
}

model Image {
  id        Int              @id @default(autoincrement())
  url       String?
  projectId Int
  project   CompletedProject @relation(fields: [projectId], references: [id])
}

model Message {
  id         Int      @id @default(autoincrement())
  content    String
  createdAt  DateTime @default(now())
  senderId   String
  receiverId String
  receiver   User     @relation("Receiver", fields: [receiverId], references: [id])
  sender     User     @relation("Sender", fields: [senderId], references: [id])
}
